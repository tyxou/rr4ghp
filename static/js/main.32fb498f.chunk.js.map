{"version":3,"sources":["helper.js","CircleButton/CircleButton.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["countNotesForFolder","notes","arguments","length","undefined","folderid","filter","note","NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","NoteListNav","react_default","a","folders","map","folder","key","id","NavLink","to","concat","title","Link","type","react_fontawesome_index_es","icon","NotePageNav","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleDelete","e","fetch","_this","method","headers","Authorization","API_KEY","then","res","ok","Promise","reject","console","log","handleReturn","handleDeleteNote","catch","error","_this2","this","process","name","format","modified","Component","NoteListMain","push","Note_Note_Note","NotePageMain","content","split","para","i","NotefulForm","assign","action","AddFolder","handleAddFolder","preventDefault","newFolder","currentTarget","value","content-type","body","JSON","stringify","Error","status","json","NotefulForm_NotefulForm","onSubmit","htmlFor","AddNote","handleAddNote","newNote","target","App","state","setNoteful","noteful","setState","noteToDelete","toConsumableArray","_this$state","Fragment","path","Route","exact","render","routeProps","NoteListNav_NoteListNav","component","_this3","_this$state2","folderId","match","params","NoteListMain_NoteListMain_NoteListMain","parseInt","noteId","NotePageMain_NotePageMain_NotePageMain","AddFolder_AddFolder_AddFolder","AddNote_AddNote_AddNote","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","BrowserRouter","basename","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.32fb498f.chunk.js","sourcesContent":["export const countNotesForFolder = (notes=[], folderid) =>\n  notes.filter(note => note.folderid === folderid).length","import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\nimport { countNotesForFolder } from '../helper'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\n\nimport './NoteListNav.css'\n\nexport default function NoteListNav(props) {\n  return (\n    <div className='NoteListNav'>\n      <ul className='NoteListNav__list'>\n        {props.folders.map(folder =>\n          <li key={folder.id}>\n            < NavLink className = 'NoteListNav__folder-link'\n            to = {`/folder/${folder.id}`} >\n              <span className='NoteListNav__num-notes'>\n                {countNotesForFolder(props.notes, folder.id)}\n              </span>\n              {folder.title}\n            </NavLink>\n          </li>\n        )}\n      </ul>\n      <div className='NoteListNav__button-wrapper'>\n        <CircleButton\n          tag={Link}\n          to = '/add-folder'\n          type='button'\n          className='NoteListNav__add-folder-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Folder\n        </CircleButton>\n      </div>\n    </div>\n  )\n}\n\nNoteListNav.defaultProps = {\n  folders: []\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NotePageNav.css'\n\nexport default function NotePageNav(props) {\n  return (\n    <div className='NotePageNav'>\n      <CircleButton\n        tag='button'\n        role='link'\n        onClick={() => props.history.goBack()}\n        className='NotePageNav__back-button'\n      >\n        <FontAwesomeIcon icon='chevron-left' />\n        <br />\n        Back\n      </CircleButton>\n      {props.folder && (\n        <h3 className='NotePageNav__folder-name'>\n          {props.folder.title}\n        </h3>\n      )}\n    </div>\n  )\n}\n\nNotePageNav.defaultProps = {\n  history: {\n    goBack: () => {}\n  }\n}\n","export default {\n  API_ENDPOINT: `https://rocky-tundra-16532.herokuapp.com/api/`\n}","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './Note.css'\nimport config from '../config'\n\n\nexport default class Note extends Component {\n\n  handleDelete = (e) => {\n    fetch(`${config.API_ENDPOINT}note/${this.props.id}`,{ \n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${config.API_KEY}`},\n    })\n    .then(res => {\n      if (!res.ok) {\n        return Promise.reject()}\n        else {\n        console.log(this.props.history)\n        this.props.handleReturn(this.props.id)\n        this.props.handleDeleteNote(this.props.id)\n        }   \n      })\n    .catch(error => {\n      console.log({error})\n    })\n  }\n\n  render(){\n    console.log('Note Route:', `${process.env.PUBLIC_URL}/note/${this.props.id}`)\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${this.props.id}`}>\n            {this.props.name}\n          </Link>\n        </h2>\n        <button className='Note__delete' type='button' onClick={() => this.handleDelete(this.props.id)}>\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(this.props.modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )}\n  }","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends Component {\n  render(){\n\n    const handleReturn = (note) => {\n      this.props.history.push('/')\n      }\n\n  return (\n  \n    <section className='NoteListMain'>\n      <ul>\n        {this.props.notes.map(note =>\n          <li key={note.id}>\n            <Note\n              id={note.id}\n              name={note.title}\n              modified={note.modified}\n              handleDeleteNote = {this.props.handleDeleteNote}\n              handleReturn = {handleReturn}\n            />\n          </li>\n        )}\n      </ul>\n      \n      <div className='NoteListMain__button-container'>\n        <CircleButton\n          tag={Link}\n          to = '/add-note'\n          type='button'\n          className='NoteListMain__add-note-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Note\n        </CircleButton>\n      </div>\n    </section>\n  )\n}\n}\n\nNoteListMain.defaultProps = {\n  notes: [],\n}\n","import React, { Component } from 'react';\nimport Note from '../Note/Note'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends Component {\n  render(){\n\n    const handleReturn = (note) => {\n    this.props.history.push('/')\n    }\n\n  return (\n\n    <section className='NotePageMain'>\n      <Note\n        id={this.props.note.id}\n        name={this.props.note.title}\n        modified={this.props.note.modified}\n        content={this.props.note.content}\n        handleDeleteNote = {this.props.handleDeleteNote}\n        handleReturn = {handleReturn}\n      />\n      <div className='NotePageMain__content'>\n        {this.props.note.content.split(/\\n \\r|\\n/).map((para, i) =>\n          <p key={i}>{para}</p>\n        )}\n      </div>\n    </section>\n  )}\n}\n\nNotePageMain.defaultProps = {\n  note: {\n    content: '',\n  }\n}\n","import React from 'react'\nimport './NotefulForm.css'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport './AddFolder.css'\nimport config from '../config'\n\nexport default class AddFolder extends Component {\n\nhandleAddFolder = (e) => {\n  e.preventDefault()\n  const newFolder = {\n    title: e.currentTarget['folder'].value\n  }\n  fetch(`${config.API_ENDPOINT}folder`,{ \n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n    'Authorization': `Bearer ${config.API_KEY}`},\n    body: JSON.stringify(newFolder)\n  })\n  .then(res => {\n    if (!res.ok) {\n    throw new Error(res.status)\n  }\n    return res.json()\n  })\n  .then(folder => {\n    this.props.handleAddFolder(folder)\n    this.props.history.push(`/folder/${folder.id}`)\n  })\n  .catch(error => {\n    console.log({error})\n  })\n  \n  console.log(newFolder)\n}\n\n  render() {\n    \n    return (\n      <section className='AddFolder'>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleAddFolder}>\n          <div className='field'>\n            <label htmlFor='folder-name-input'>\n              Name\n            </label>\n            <input type='text' id='folder-name-input' name='folder' />\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport './AddNote.css'\nimport config from '../config'\n\nexport default class AddNote extends Component {\n  static defaultProps = {\n    folders: [],\n  }\n\n  handleAddNote = (e) => {\n    e.preventDefault()\n    const newNote = {\n      title: e.target['title'].value,\n      content: e.target['content'].value,\n      folderid: e.target['folderid'].value\n    }\n    fetch(`${config.API_ENDPOINT}note`,{ \n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'Authorization': `Bearer ${config.API_KEY}`},\n      body: JSON.stringify(newNote)\n    })\n    .then(res => {\n      if (!res.ok) {\n      throw new Error(res.status)\n    }\n      return res.json()\n    })\n    .then(note => {\n      this.props.handleAddNote(note)\n      this.props.history.push(`/note/${note.id}`)\n    })\n    .catch(error => {\n      console.log({error})\n    })\n    \n  }\n\n  render() {\n    const { folders } = this.props\n    return (\n      <section className='AddNote'>\n        <h2>Create a note</h2>\n        <NotefulForm onSubmit={e => this.handleAddNote(e)}>\n          <div className='field'>\n            <label htmlFor='note-name-input'>\n              Name\n            </label>\n            <input type='text' id='note-name-input' name='title'/> \n          </div>\n          <div className='field'>\n            <label htmlFor='note-content-input'>\n              Content\n            </label>\n            <textarea id='note-content-input' name='content' /> \n          </div>\n          <div className='field'>\n            <label htmlFor='note-folder-select'>\n              Folder\n            </label>\n            <select id='note-folder-select' name='folderid'> \n              <option value={null}>...</option>\n              {folders.map(folder =>\n                <option key={folder.id} value={folder.id}>\n                  {folder.title}\n                </option>\n              )}\n            </select>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add note\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport config from '../config'\n// import Note from '../Note/Note'\n\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n\n  setNoteful = noteful => {\n    this.setState({\n      notes: noteful.notes,\n      folders: noteful.folders\n    })\n  }\n  handleDeleteNote = (noteToDelete) => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteToDelete)\n    })\n  }\n  handleAddNote = (newNote) => {\n    this.setState({\n     notes: [ ...this.state.notes, newNote ]\n    })\n  }\n  handleAddFolder = (newFolder) => {\n    this.setState({\n      folders: [ ...this.state.folders, newFolder ]\n     })\n  }\n  componentDidMount() {\n      fetch(config.API_ENDPOINT, {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          'Authorization': `Bearer ${config.API_KEY}`\n        }\n      })\n        .then(res => {\n          if (!res.ok) {\n            throw new Error(res.status)\n          }\n          return res.json()\n        })\n        .then(this.setNoteful)\n        .catch(error => this.setState({ error }))\n    }\n  renderNavRoutes() {\n    const { notes, folders } = this.state\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route exact key={path} path={path} render={routeProps =>\n              <NoteListNav\n                folders={folders}\n                notes={notes}\n                {...routeProps}\n              />\n            }\n          />\n        )}\n        <Route\n          path = '/note/:noteId'\n          component={NotePageNav}\n        />\n        <Route\n          path = '/add-folder'\n          component={NotePageNav}\n          \n        />\n        <Route\n          path = '/add-note'\n          component={NotePageNav}\n        />\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    const { notes, folders } = this.state\n    return (\n      <>\n        {\n          ['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps => {\n              const { folderId } = routeProps.match.params\n              return (\n                <NoteListMain\n                  {...routeProps}\n                  handleDeleteNote = {this.handleDeleteNote}\n                  notes={!folderId ? notes : notes.filter(note=>note.folderid===parseInt(folderId,10))}\n                />\n              )\n            }}\n          />\n        )}\n        \n        <Route\n          path = '/note/:noteId'\n          render={routeProps => {\n            const { noteId } = routeProps.match.params\n            return (\n              <NotePageMain\n                {...routeProps}\n                note={notes.filter(note=>note.id===parseInt(noteId,10))[0]}\n                handleDeleteNote = {this.handleDeleteNote}\n              />\n            )\n          }}\n        />\n        <Route\n          path = '/add-folder'\n          render={routeProps => {\n            return (\n              <AddFolder\n              {...routeProps}\n              handleAddFolder = {this.handleAddFolder}\n              />\n              )\n          }}\n        />\n        <Route\n          path='/add-note'\n          render={routeProps => {\n            return (\n              <AddNote\n                {...routeProps}\n                folders={folders}\n                handleAddNote = {this.handleAddNote}\n              />\n            )\n          }}\n        />\n      </>\n    )\n  }\n\n  render() {\n    console.log('test push 1')\n    console.log(process.env)\n    return (\n      <div className='App'>\n        <nav className='App__nav'>\n          { this.renderNavRoutes()}\n        </nav>\n        <header className='App__header'>\n          <h1>\n            <Link to = ''> Noteful </Link>\n            {' '}\n            <FontAwesomeIcon icon='check-double' />\n          </h1>\n        </header>\n        <main className='App__main'>\n          { this.renderMainRoutes()}\n        </main>\n      </div>\n\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}